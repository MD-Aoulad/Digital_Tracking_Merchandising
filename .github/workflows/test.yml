name: Comprehensive Testing Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Testing
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Run backend unit tests
      run: |
        cd backend
        npm run test:unit
        
    - name: Run backend integration tests
      run: |
        cd backend
        npm run test:integration
        
    - name: Run backend security tests
      run: |
        cd backend
        npm run test:security
        
    - name: Run backend performance tests
      run: |
        cd backend
        npm run test:performance
        
    - name: Generate backend coverage report
      run: |
        cd backend
        npm run test:coverage
        
    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

  # Frontend Testing
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install frontend dependencies
      run: npm ci
      
    - name: Run frontend unit tests
      run: npm run test:unit
      
    - name: Run frontend integration tests
      run: npm run test:integration
      
    - name: Run frontend component tests
      run: npm test -- --testPathPattern="components" --coverage --watchAll=false
      
    - name: Generate frontend coverage report
      run: npm run test:coverage
      
    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  # E2E Testing
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    services:
      # Start backend server
      backend:
        image: node:18
        ports:
          - 5000:5000
        options: >-
          --health-cmd "curl -f http://localhost:5000/api/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        volumes:
          - ./backend:/app
        working-dir: /app
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret-key
          PORT: 5000
        command: npm start
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        
    - name: Start backend server
      run: |
        cd backend
        npm start &
        sleep 10
        
    - name: Start frontend server
      run: |
        npm start &
        sleep 30
        
    - name: Run E2E tests
      run: npm run test:e2e
      
    - name: Upload E2E screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-screenshots
        path: cypress/screenshots
        if-no-files-found: ignore

  # Mobile Testing
  mobile-tests:
    name: Mobile Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install mobile dependencies
      run: |
        cd mobile
        npm ci
        
    - name: Run mobile tests
      run: |
        cd mobile
        npm test -- --coverage --watchAll=false
        
    - name: Upload mobile coverage
      uses: codecov/codecov-action@v3
      with:
        file: mobile/coverage/lcov.info
        flags: mobile
        name: mobile-coverage

  # API Contract Testing
  api-contract-tests:
    name: API Contract Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Start backend server
      run: |
        cd backend
        npm start &
        sleep 10
        
    - name: Run API contract tests
      run: npm run test:api
      
    - name: Validate API documentation
      run: |
        cd backend
        curl -f http://localhost:5000/api/docs || exit 1

  # Performance Testing
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        
    - name: Start backend server
      run: |
        cd backend
        npm start &
        sleep 10
        
    - name: Run load tests
      run: npm run test:load
      
    - name: Run performance benchmarks
      run: |
        cd backend
        npm run test:performance

  # Security Testing
  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        
    - name: Run security tests
      run: |
        cd backend
        npm run test:security
        
    - name: Run dependency vulnerability scan
      run: |
        npm audit --audit-level moderate
        cd backend && npm audit --audit-level moderate

  # Code Quality
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        
    - name: Run ESLint
      run: |
        npm run lint
        cd backend && npm run lint
        
    - name: Run Prettier check
      run: |
        npm run format:check
        cd backend && npm run format:check
        
    - name: Check TypeScript types
      run: npm run type-check

  # Health Checks
  health-checks:
    name: Health Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run health checks
      run: npm run test:health
      
    - name: Run smoke tests
      run: npm run test:smoke

  # Test Summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, e2e-tests, mobile-tests, api-contract-tests, performance-tests, security-tests, code-quality, health-checks]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate test summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "âœ… All test suites completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Coverage" >> $GITHUB_STEP_SUMMARY
        echo "- Backend: Unit, Integration, Security, Performance tests" >> $GITHUB_STEP_SUMMARY
        echo "- Frontend: Unit, Integration, Component tests" >> $GITHUB_STEP_SUMMARY
        echo "- E2E: Full user workflow tests" >> $GITHUB_STEP_SUMMARY
        echo "- Mobile: React Native app tests" >> $GITHUB_STEP_SUMMARY
        echo "- API: Contract and load tests" >> $GITHUB_STEP_SUMMARY
        echo "- Security: Authentication, authorization, input validation" >> $GITHUB_STEP_SUMMARY
        echo "- Code Quality: ESLint, Prettier, TypeScript" >> $GITHUB_STEP_SUMMARY
        echo "- Health: Server health and smoke tests" >> $GITHUB_STEP_SUMMARY 
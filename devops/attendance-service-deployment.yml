version: '3.8'

services:
  # Attendance Service
  attendance-service:
    build:
      context: ../microservices/attendance-service
      dockerfile: Dockerfile
    container_name: attendance-service
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=production
      - PORT=3007
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=postgresql://attendance_user:attendance_password@attendance-db:5432/attendance_db
      - REDIS_URL=redis://attendance-redis:6379
      - UPLOAD_PATH=/uploads/attendance
      - MAX_FILE_SIZE=5242880
      - DEFAULT_GEOFENCE_RADIUS=100
      - LOG_LEVEL=info
    volumes:
      - attendance-uploads:/uploads/attendance
      - ./logs:/app/logs
    depends_on:
      - attendance-db
      - attendance-redis
    networks:
      - attendance-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3007/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  attendance-db:
    image: postgres:15-alpine
    container_name: attendance-db
    environment:
      - POSTGRES_DB=attendance_db
      - POSTGRES_USER=attendance_user
      - POSTGRES_PASSWORD=attendance_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - attendance-db-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
    ports:
      - "5437:5432"
    networks:
      - attendance-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U attendance_user -d attendance_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  attendance-redis:
    image: redis:7-alpine
    container_name: attendance-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - attendance-redis-data:/data
    ports:
      - "6387:6379"
    networks:
      - attendance-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:attendance-redis:6379
    ports:
      - "8087:8081"
    depends_on:
      - attendance-redis
    networks:
      - attendance-network
    restart: unless-stopped

  # pgAdmin (Web UI for PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@attendance.com
              - PGADMIN_DEFAULT_PASSWORD=password
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "8088:80"
    depends_on:
      - attendance-db
    networks:
      - attendance-network
    restart: unless-stopped

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: attendance-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9097:9090"
    networks:
      - attendance-network
    restart: unless-stopped

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: attendance-grafana
    environment:
              - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3008:3000"
    depends_on:
      - prometheus
    networks:
      - attendance-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: attendance-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - attendance-service
    networks:
      - attendance-network
    restart: unless-stopped

volumes:
  attendance-db-data:
    driver: local
  attendance-redis-data:
    driver: local
  attendance-uploads:
    driver: local
  pgadmin-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  attendance-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 
services:
  # Attendance Service
  attendance-service:
    build:
      context: ../microservices/attendance-service
      dockerfile: Dockerfile
    container_name: attendance-service
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=production
      - PORT=3007
      - JWT_SECRET=your-super-secret-jwt-key-for-testing
      - DATABASE_URL=postgresql://attendance_user:attendance_password@attendance-db:5432/attendance_db
      - REDIS_URL=redis://attendance-redis:6379
      - UPLOAD_PATH=/uploads/attendance
      - MAX_FILE_SIZE=5242880
      - DEFAULT_GEOFENCE_RADIUS=100
      - LOG_LEVEL=info
    volumes:
      - attendance-uploads:/uploads/attendance
    depends_on:
      - attendance-db
      - attendance-redis
    networks:
      - attendance-network
    restart: unless-stopped

  # PostgreSQL Database
  attendance-db:
    image: postgres:15-alpine
    container_name: attendance-db
    environment:
      - POSTGRES_DB=attendance_db
      - POSTGRES_USER=attendance_user
      - POSTGRES_PASSWORD=attendance_password
    volumes:
      - attendance-db-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5437:5432"
    networks:
      - attendance-network
    restart: unless-stopped

  # Redis Cache
  attendance-redis:
    image: redis:7-alpine
    container_name: attendance-redis
    command: redis-server --appendonly yes
    volumes:
      - attendance-redis-data:/data
    ports:
      - "6387:6379"
    networks:
      - attendance-network
    restart: unless-stopped

volumes:
  attendance-db-data:
    driver: local
  attendance-redis-data:
    driver: local
  attendance-uploads:
    driver: local

networks:
  attendance-network:
    driver: bridge 